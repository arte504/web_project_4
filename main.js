!function(){"use strict";var e={d:function(t,r){for(var s in r)e.o(r,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:r[s]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};e.d({},{b7:function(){return h},ED:function(){return _},rC:function(){return d}});class t{constructor(e,t){this._formConfig=e,this._formElement=t}_showInputError=(e,t)=>{const{inputErrorClass:r,errorMessageClass:s}=this._formConfig,n=this._formElement.querySelector(` #${e.id}_error `);n.textContent=t,n.classList.add(s),e.classList.add(r)};_hideInputError=e=>{const{inputErrorClass:t,errorMessageClass:r}=this._formConfig,s=this._formElement.querySelector(` #${e.id}_error `);s.textContent="",s.classList.remove(r),e.classList.remove(t)};resetValidation(){this.inputs.forEach((e=>{this._hideInputError(e)})),this._toggleSubmitButton()}_checkInput=e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)};_checkIfFormValid=()=>this.inputs.every((e=>e.validity.valid));_toggleSubmitButton(){const{inactiveButtonClass:e,submitButtonSelector:t}=this._formConfig,r=this._formElement.querySelector(t);this._checkIfFormValid()?(r.disabled=!1,r.classList.remove(e)):(r.disabled=!0,r.classList.add(e))}_setEventListeners=()=>{const{inputSelector:e}=this._formConfig;return this.inputs=Array.from(this._formElement.querySelectorAll(e)),this.inputs.forEach((e=>{e.addEventListener("input",(()=>{this._checkInput(e),this._toggleSubmitButton()}))})),this._formElement};enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class r{constructor(e,t,r,{onCardClick:s,removeHandler:n,likeHandler:o}){this._name=e.name,this._link=e.link,this._likes=e.likes,this._ownerId=e.owner._id,this._id=e._id,this._cardTemplate=t,this._userId=r,this._onCardClick=s,this._likeHandler=o,this._removeHandler=n}_getTemplate(){return this._cardTemplate.querySelector(".card").cloneNode(!0)}_setAttributes(e,t){for(const r in t)e.setAttribute(r,t[r])}deleteCard(){const e=document.getElementById(id);e&&e.parentNode.removeChild(e),this._cardElement=null}_renderLikes(){this._likes.some((e=>e._id===this._userId?this.likeCard():this.unlikeCard()))}showLikes(e){this._cardElement.querySelector(".card__like-count").textContent=e}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(e=>{this._likeCard(e)})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._removeHandler(this._id)})),this._cardImage.addEventListener("click",(e=>{this._onCardClick(e)}))}_showDeleteIcon(){this._userId!=this._owner._id&&this._cardElement.querySelector(".card__delete-button").classList.add("card__delete-button_hidden")}isLiked(){return this.likeIcon.classList.contains("card__like-button_active")}generateCard(){return this._cardElement=this._getTemplate(),this.likeIcon=this._cardElement.querySelector(".card__like-button"),this._setAttributes(this._cardElement.querySelector(".card__image"),{src:this._image,alt:this._name}),this._cardElement.querySelector(".card__title").textContent=this.name,this._showDeleteIcon(),this.showLikes(this._likes.length),this._setEventListeners(),this._renderLikes(),this._cardElement}likeCard(){this.likeIcon.classList.add("card__like-button_active")}unlikeCard(){this.likeIcon.classList.remove("card__like-button_active")}}class s{constructor(e){this._modal=e}open(){this._modal.classList.add(".modal_visible"),this.setEventListeners()}close(){this._modal.classList.remove(".modal_visible"),this.removeEventListeners()}_clickEscHandler=e=>{"Escape"===e.key&&this.close()};_clickOnCloseButtonHandler=()=>{this.close()};_clickOnOverlayHandler=e=>{e.target===e.currentTarget&&this.close()};setEventListeners(){this._modal=document.querySelector(".modal__container_type_form"),this._modal.querySelector(".modal__close-button").addEventListener("click",this._clickOnCloseButtonHandler),this._modal.addEventListener("click",this._clickOnOverlayHandler),document.addEventListener("keydown",this._clickEscHandler)}removeEventListeners(){this._modal=document.querySelector(".modal__container_type_form"),this._modal.querySelector(".modal__close-button").removeEventListener("click",this._clickOnCloseButtonHandler),this._modal.removeEventListener("click",this._clickOnOverlayHandler),document.removeEventListener("keydown",this._clickEscHandler)}}class n extends s{constructor({modal:e,handleSubmit:t}){super(e),this._handleSubmit=t,this._form=document.querySelector(".modal__container_type_form"),this._formElement=this._form.querySelectorAll(".modal__input")}_getInputValues(){return this._formInputValues={},inputList.forEach((e=>{this._formInputValues[e.name]=e.value})),inputValues}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",this.handleSubmit)}removeEventListeners(){super.removeEventListeners(),this._form.removeEventListener("submit",this.handleSubmit)}handleSubmit=e=>(e.preventDefault(),this._handleSubmit(this._getInputValues));handleRemove(e){this._handleSubmit=e}close(){super.close(),this._form.reset()}}class o{constructor({items:e,renderer:t},r){this._renderedElements=e,this._renderer=t,this._container=document.querySelector(r)}renderer(){this._renderedElements.forEach((e=>this._renderer(e)))}addItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}}class i{constructor(e,t,r){this._name=e,this._job=t,this._avatar=r}getUserInfo(){return this._userInfo={title:this._name.textContent,job:this._job.textContent}}setUserInfo(e,t,r){this._userInfo={title:e,job:t,userAvatar:r},r?(h.src=this._userInfo.userAvatar,d.textContent=this._userInfo.title,_.textContent=this._userInfo.job):(d.textContent=this._userInfo.title,_.textContent=this._userInfo.job)}}const a=document.querySelector(".profile__edit-button"),l=document.querySelector(".modal_type_edit"),d=document.querySelector(".profile__title"),c=document.querySelector(".modal__input_type_title"),_=document.querySelector(".profile__subtitle"),u=document.querySelector(".modal__input_type_subtitle"),h=(document.querySelector(".modal__close-button_type_edit"),document.querySelector(".profile__image")),m=document.querySelector(".profile__image-edit"),p=document.querySelector(".modal_type_avatar"),f=(p.querySelector(".modal__input_type_avatar"),document.querySelector(".modal__close-button_type_avatar"),document.querySelector(".profile__add-button")),b=document.querySelector(".modal_type_add-card"),v=(document.querySelector(".modal__input_type_name"),document.querySelector(".modal__input_type_link"),document.querySelector(".modal__close-button_type_add-card"),document.forms.add),y=(v.elements.title,v.elements.link,document.querySelector(".modal__submit-button"),document.querySelector(".cards__grid"),document.querySelector("#card__template")),E=document.querySelector(".modal_type_big-image"),k=(document.querySelector(".modal__big-image"),document.querySelector(".modal__image-caption"),document.querySelector(".modal__close-button_type_big-image"),document.querySelector(".modal_type_delete-card")),S={formSelector:".modal__container",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_disabled",inputErrorClass:"modal__input_error",errorMessageClass:"modal__error_visible"},g=new class extends s{openup=e=>{const t=e.target;this._modalElement.querySelector(".modal__big-image").src=t.src,this._modalElement.querySelector(".modal__big-image").alt=t.alt,this._modalElement.querySelector(".modal__image-caption").textContent=t.alt,this.open()}}(E);g.setEventListeners();const C=new n({modal:k});function L(e,t){t.querySelector(".modal__submit-button").textContent=e?"Saving...":"Save"}C.setEventListeners();const I=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}getCardList(){return fetch(this._baseUrl+"/cards",{headers:this._headers}).then((function(e){if(e.ok)return e.json().then((e=>e));Promise.reject("Error!"+e.statusText)}))}getUserInfo(){return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject("Error!"+e.statusText)))}getAppInfo(){return Promise.all([this.getCardList(),this.getUserInfo()])}addCard(e){const{name:t,link:r}=e;return fetch(this._baseUrl+"/cards",{headers:this._headers,method:"POST",body:JSON.stringify({name:t,link:r})}).then((e=>{if(e.ok)return e.json();Promise.reject("Error!"+e.statusText)}))}removeCard(e){return fetch(this._baseUrl+"/cards/"+e,{headers:this._headers,method:"DELETE"}).then((e=>e.ok?e.json():Promise.reject("Error!"+e.statusText)))}likeCard(e){return fetch(this._baseUrl+"/cards/likes/"+e,{headers:this._headers,method:"PUT"}).then((e=>{if(e.ok)return e.json();Promise.reject("Error!"+e.statusText)}))}unlikeCard(e){return fetch(this._baseUrl+"/cards/likes/"+e,{headers:this._headers,method:"DELETE"}).then((e=>e.ok?e.json():Promise.reject("Error!"+e.statusText)))}setUserInfo(e){const{name:t,job:r}=e;return fetch(this._baseUrl+"/users/me",{headers:this._headers,method:"PATCH",body:JSON.stringify({name:t,job:r})}).then((e=>e.ok?e.json():Promise.reject("Error!"+e.statusText+e.status)))}setUserAvatar({avatar:e}){return fetch(this._baseUrl+"/users/me/avatar",{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject("Error!"+e.statusText)))}updateUserInfo(e){const{name:t,job:r}=e;return fetch(this._baseUrl+"/users/me",{headers:this._headers,method:"PATCH",body:JSON.stringify({name:t,job:r})}).then((e=>e.ok?e.json():Promise.reject("Error!"+e.statusText)))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"709a0d9d-db06-4890-a594-b07e7309a353","Content-Type":"application/json"}});I.getAppInfo().then((([e,t])=>{const s=new i(d,_,h);s.setUserInfo(t);const m=e=>{const t=new r(e,y,user._id,{onCardClick:({name:e,link:t})=>{g.open(t,e)},removeHandler:e=>{C.open(),C.handleRemove((()=>{I.removeCard(e).then((()=>{t.deleteCardModal(),C.close()})).catch((e=>console.log(e)))}))},likeHandler:e=>{t.isLiked()?I.unlikeCard(e).then((e=>{t.unlikeCard(),t.showLikes(e.likes.lenght)})):I.likeCard(e).then((e=>{t.unlikeCard(),t.showLikes(e.likes.lenght)})).catch((e=>console.log(e)))}});return t},v=new o({items:e,renderer:e=>{v.addItem(m(e).generateCard())}},".cards__grid");console.log(e),v.renderer();const E=new n({modal:b,handleSubmit:e=>{L(!0,b),I.addCard(e).then((e=>{v.prependItem(m(e).generateCard())})).then((()=>{E.close()})).catch((e=>console.log(e))).finally((()=>L(!1,b)))}});f.addEventListener("click",(()=>{w.resetValidation(),addNewCardModal.open()})),addNewCardModal.setEventListeners();const k=new n({modal:l,handleSubmit:e=>{L(!0,l),I.updateUserInfo(i).then((e=>{s.setUserInfo(e)})).then((()=>{k.close()})).catch((e=>console.log(e))).finally((()=>L(!1,l)))}});a.addEventListener("click",(()=>{j.resetValidation();const{name:e,job:t}=s.getUserInfo();c.value=e,u.value=t,k.open()}));const S=new n({modal:p,handleSubmit:e=>{L(!0,p),I.updateUserInfo(e.avatar).then((e=>{s.setUserInfo(e)})).then((()=>{S.close()})).catch((e=>console.log(e))).finally((()=>{L(!1,p)}))}})})).catch((e=>console.log(e)));const q=new n({modalSelector:p,modalSubmition:e=>{!function(e){L(!0,p),I.setUserAvatar({avatar:e.avatarURL}).then((e=>{h.src=e.avatar,L(!1,p),q.close()})).catch((e=>console.log(e)))}(e)}});m.addEventListener("click",(()=>{q.open()})),q.setEventListeners();const j=new t(S,l);j.enableValidation(),new t(S,p).enableValidation();const w=new t(S,b);w.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,