!function(){"use strict";var e={d:function(t,r){for(var s in r)e.o(r,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:r[s]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};e.d({},{b7:function(){return h},ED:function(){return _},rC:function(){return c}});class t{constructor(e,t){this._formConfig=e,this._formElement=t}_showInputError=(e,t)=>{const{inputErrorClass:r,errorMessageClass:s}=this._formConfig,o=this._formElement.querySelector(` #${e.id}_error `);o.textContent=t,o.classList.add(s),e.classList.add(r)};_hideInputError=e=>{const{inputErrorClass:t,errorMessageClass:r}=this._formConfig,s=this._formElement.querySelector(` #${e.id}_error `);s.textContent="",s.classList.remove(r),e.classList.remove(t)};resetValidation(){this.inputs.forEach((e=>{this._hideInputError(e)})),this._toggleSubmitButton()}_checkInput=e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)};_checkIfFormValid=()=>this.inputs.every((e=>e.validity.valid));_toggleSubmitButton(){const{inactiveButtonClass:e,submitButtonSelector:t}=this._formConfig,r=this._formElement.querySelector(t);this._checkIfFormValid()?(r.disabled=!1,r.classList.remove(e)):(r.disabled=!0,r.classList.add(e))}_setEventListeners=()=>{const{inputSelector:e}=this._formConfig;return this.inputs=Array.from(this._formElement.querySelectorAll(e)),this.inputs.forEach((e=>{e.addEventListener("input",(()=>{this._checkInput(e),this._toggleSubmitButton()}))})),this._formElement};enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class r{constructor(e,t,r,{onCardClick:s,removeHandler:o,likeHandler:n}){this._name=e.name,this._link=e.link,this._likes=e.likes,this._ownerId=e.owner._id,this._id=e._id,this._cardTemplate=t,this._userId=r,this._onCardClick=s,this._likeHandler=n,this._removeHandler=o}_getTemplate(){return this._cardTemplate.querySelector(".card").cloneNode(!0)}id(){return this._id}deleteCard(){const e=document.getElementById(id);e&&e.parentNode.removeChild(e),this._cardElement=null}_renderLikes(){this._likes.some((e=>e._id===this._userId))&&this._cardElement.querySelector(".card__like-button").classList.add("card__like-button_active")}showLikes(e){this._cardElement.querySelector(".card__like-count").textContent=e}updateLikes(e){this._likes=e,this._renderLikes()}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(e=>{this._likeCard(e)})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._removeHandler(this._id)})),this._cardImage.addEventListener("click",(e=>{this._onCardClick(e)}))}_showDeleteIcon(){this._owner._id!==this._userId&&this._cardElement.querySelector(".card__delete-button").classList.add("card__delete-button_hidden")}generateCard(){return this._cardElement=this._getTemplate(),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=`Image of  ${this._name} `,this._renderLikes(),this.showLikes(this._likes.length),this._showDeleteIcon(),this._cardElement.id=this._id,this._setEventListeners(),this._item}}class s{constructor(e){this._modal=e}open(){this._modal.classList.add(".modal_visible"),this.setEventListeners()}close(){this._modal.classList.remove(".modal_visible"),this.removeEventListeners()}_clickEscHandler=e=>{"Escape"===e.key&&this.close()};_clickOnCloseButtonHandler=()=>{this.close()};_clickOnOverlayHandler=e=>{e.target===e.currentTarget&&this.close()};setEventListeners(){this._modal.querySelector(".modal__close-button").addEventListener("click",this._clickOnCloseButtonHandler),this._modal.addEventListener("click",this._clickOnOverlayHandler),document.addEventListener("keydown",this._clickEscHandler)}removeEventListeners(){this._modal.querySelector(".modal__close-button").removeEventListener("click",this._clickOnCloseButtonHandler),this._modal.removeEventListener("click",this._clickOnOverlayHandler),document.removeEventListener("keydown",this._clickEscHandler)}}class o extends s{constructor({modal:e,handleSubmit:t}){super(e),this._handleSubmit=t,this._form=this._modal.querySelector(".modal__container_type_form"),this._formElement=this._modal.querySelectorAll(".modal__input")}_getInputValues(){return this._formInputValues={},inputList.forEach((e=>{this._formInputValues[e.name]=e.value})),inputValues}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",this.handleSubmit)}removeEventListeners(){super.removeEventListeners(),this._form.removeEventListener("submit",this.handleSubmit)}handleSubmit=e=>(e.preventDefault(),this._handleSubmit(this._getInputValues));handleRemove(e){this._handleSubmit=e}close(){super.close(),this._form.reset()}}class n{constructor({items:e,renderer:t},r){this._items=e,this._renderer=t,this._container=document.querySelector(r)}addItem(e){this._container.prepend(e)}clear(){this._container.innerHTML=""}renderItems(){this.clear(),this._items.forEach((e=>{this._renderer(e)}))}}class i{constructor(e,t,r){this._name=e,this._job=t,this._avatar=r}getUserInfo(){return this._userInfo={title:this._name.textContent,job:this._job.textContent}}setUserInfo(e,t,r){this._userInfo={title:e,job:t,userAvatar:r},r?(h.src=this._userInfo.userAvatar,c.textContent=this._userInfo.title,_.textContent=this._userInfo.job):(c.textContent=this._userInfo.title,_.textContent=this._userInfo.job)}}const a=document.querySelector(".profile__edit-button"),l=document.querySelector(".modal_type_edit"),c=document.querySelector(".profile__title"),d=document.querySelector(".modal__input_type_title"),_=document.querySelector(".profile__subtitle"),u=document.querySelector(".modal__input_type_subtitle"),h=(document.querySelector(".modal__close-button_type_edit"),document.querySelector(".profile__image")),m=document.querySelector(".profile__image-edit"),b=document.querySelector(".modal_type_avatar"),v=(b.querySelector(".modal__input_type_avatar"),document.querySelector(".modal__close-button_type_avatar"),document.querySelector(".profile__add-button")),p=document.querySelector(".modal_type_add-card"),f=(document.querySelector(".modal__input_type_name"),document.querySelector(".modal__input_type_link"),document.querySelector(".modal__close-button_type_add-card"),document.forms.add),k=(f.elements.title,f.elements.link,document.querySelector(".modal__submit-button"),document.querySelector(".cards__grid"),document.querySelector(".modal_type_big-image")),E=(document.querySelector(".modal__big-image"),document.querySelector(".modal__image-caption"),document.querySelector(".modal__close-button_type_big-image"),document.querySelector(".modal_type_delete-card")),y={formSelector:".modal__container",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_disabled",inputErrorClass:"modal__input_error",errorMessageClass:"modal__error_visible"},S=new class extends s{openup=e=>{const t=e.target;this._modalElement.querySelector(".modal__big-image").src=t.src,this._modalElement.querySelector(".modal__big-image").alt=t.alt,this._modalElement.querySelector(".modal__image-caption").textContent=t.alt,this.open()}}(k);S.setEventListeners();const g=new o({modalSelector:E});function L(e,t){t.querySelector(".modal__submit-button").textContent=e?"Saving...":"Save"}g.setEventListeners();const C=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}getCardList(){return fetch(this._baseUrl+"/cards",{headers:this._headers}).then((function(e){if(e.ok)return e.json().then((e=>e));Promise.reject("Error!"+e.statusText)}))}getUserInfo(){return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject("Error!"+e.statusText)))}getAppInfo(){return Promise.all([this.getUserInfo(),this.getCardList()])}addCard({name:e,link:t}){return fetch(this._baseUrl+"/cards",{headers:this._headers,method:"POST",body:JSON.stringify({name:e,link:t})}).then((e=>{if(e.ok)return e.json();Promise.reject("Error!"+e.statusText)}))}removeCard(e){return fetch(this._baseUrl+"/cards/"+e,{headers:this._headers,method:"DELETE"}).then((e=>e.ok?e.json():Promise.reject("Error!"+e.statusText)))}addLike(e){return fetch(this._baseUrl+"/cards/likes/"+e,{headers:this._headers,method:"PUT"}).then((e=>{if(e.ok)return e.json();Promise.reject("Error!"+e.statusText)}))}removeLike(e){return fetch(this._baseUrl+"/cards/likes/"+e,{headers:this._headers,method:"DELETE"}).then((e=>e.ok?e.json():Promise.reject("Error!"+e.statusText)))}setUserInfo({name:e,job:t}){return fetch(this._baseUrl+"/users/me",{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e,job:t})}).then((e=>e.ok?e.json():Promise.reject("Error!"+e.statusText+e.status)))}setUserAvatar({avatar:e}){return fetch(this._baseUrl+"/users/me/avatar",{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject("Error!"+e.statusText)))}updateUserInfo({name:e,job:t}){return fetch(this._baseUrl+"/users/me",{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e,job:t})}).then((e=>e.ok?e.json():Promise.reject("Error!"+e.statusText)))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"709a0d9d-db06-4890-a594-b07e7309a353","Content-Type":"application/json"}});C.getAppInfo().then((([e,t])=>{const s=new n({items:t,renderer:b},".cards__grid");s.renderItems();const m=new o({modalSelector:p,modalSubmition:e=>{L(!0,p),C.addCard(e).then((e=>{console.log(e),b(e),m.close(),L(!1,p)})).catch((e=>console.log(e)))}});function b(t){const o=new r({data:t,handleCardClick:({name:e,link:t})=>{S.open(t,e)},handleDeleteClick:e=>{g.open(e),g.setSubmitHandler((()=>{C.removeCard(e).then((()=>{o.deleteCardModal(),g.close()})).catch((e=>console.log(e)))}))},likeHandler:e=>{n.querySelector(".card__like-button").classList.contains("card__like-button_active")?C.deleteLike(e).then((e=>{n.querySelector(".card__like-button").classList.remove("card__like-button_active"),o.showLikes(e.likes.length),o._likes=e.likes})).catch((e=>console.log(e))):(o._cardElement.classList.toggle("card__like-button_active"),C.addLike(e).then((e=>{n.querySelector(".card__like-button").classList.add("card__like-button_active"),o.showLikes(e.likes.length),o._likes=e.likes})).catch((e=>console.log(e))))}},e._id,".card__template"),n=o.generateCard();s.addItem(n),L(!0,p)}v.addEventListener("click",(()=>{m.open(),L(!1,p)})),m.setEventListeners();const f=new i(c,_,h);C.getUserInfo().then((e=>{f.setUserInfo(e.name,e.job,e.avatar)}));const k=new o({modalSelector:l,modalSubmition:e=>{L(!0,l),C.setUserInfos({name:e.name,job:e.job}).then((e=>{L(!1,l),f.setUserInfo(e.name,e.job),k.close(),console.log(e)})).catch((e=>console.log(e)))}});k.setEventListeners(),a.addEventListener("click",(()=>{k.open();const e=f.getUserInfo();d.value=e.name,u.value=e.job}))})).catch((e=>console.log(e)));const I=new o({modalSelector:b,modalSubmition:e=>{!function(e){L(!0,b),C.setUserAvatar({avatar:e.avatarURL}).then((e=>{h.src=e.avatar,L(!1,b),I.close()})).catch((e=>console.log(e)))}(e)}});m.addEventListener("click",(()=>{I.open()})),I.setEventListeners(),new t(y,l).enableValidation(),new t(y,b).enableValidation(),new t(y,p).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,